name: Build and Prepare Deployment

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'
      - 'docs/**'

jobs:
  build-and-prepare:
    name: Build and Create Deployment Package
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      - name: Install dependencies
        run: go mod download
      
      - name: Run tests
        run: go test ./... -v
      
      - name: Build application
        run: go build -v ./...
      
      - name: Create deployment package
        run: |
          echo "🚀 Creating deployment package..."
          mkdir -p hugo-contact-deployment
          
          # Copy essential files
          cp main.go hugo-contact-deployment/
          cp Dockerfile hugo-contact-deployment/
          cp go.mod go.sum hugo-contact-deployment/
          cp docker-compose.build.yml hugo-contact-deployment/
          cp manage-service.sh hugo-contact-deployment/
          cp scripts/deploy.sh hugo-contact-deployment/
          
          # Make scripts executable
          chmod +x hugo-contact-deployment/manage-service.sh
          chmod +x hugo-contact-deployment/deploy.sh
          
          # Create .env file with production settings
          cat > hugo-contact-deployment/.env << 'EOF'
          # SMTP Configuration
          SMTP_HOST=mail23.hi7.de
          SMTP_PORT=587
          SMTP_USERNAME=k000490-017
          SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
          SENDER_EMAIL=system@connexxo.com
          RECIPIENT_EMAIL=info@connexxo.com
          
          # CORS Configuration
          CORS_ALLOW_ORIGINS=http://localhost:1313,https://v2.connexxo.com,https://connexxo.com,http://contact.connexxo.com:8080
          
          # Security Token
          TOKEN_SECRET=${{ secrets.TOKEN_SECRET }}
          
          # Server Configuration
          PORT=8080
          EOF
          
          # Create deployment instructions
          cat > hugo-contact-deployment/DEPLOYMENT-INSTRUCTIONS.md << 'EOF'
          # Hugo Contact Form - Manual Deployment Instructions
          
          ## 📦 Files Ready for Deployment
          
          All files have been prepared and tested. Upload these files to your server:
          
          - `main.go` - Application source code
          - `Dockerfile` - Docker container configuration
          - `go.mod`, `go.sum` - Go dependencies
          - `docker-compose.build.yml` - Docker Compose configuration
          - `manage-service.sh` - Service management script
          - `deploy.sh` - Automated deployment script
          - `.env` - Production environment configuration (with secrets)
          
          ## 🚀 Deployment Steps
          
          ### 1. Upload Files to Server
          
          Upload all files to your server directory (e.g., `~/hugo-contact/`):
          
          ```bash
          # Via SCP (if you have SSH access)
          scp -r hugo-contact-deployment/* user@yourserver.com:~/hugo-contact/
          
          # Via FTP client
          # Upload all files to your desired directory
          ```
          
          ### 2. Execute Deployment
          
          SSH into your server and run the deployment:
          
          ```bash
          # SSH into your server
          ssh user@yourserver.com
          
          # Navigate to deployment directory
          cd ~/hugo-contact
          
          # Make scripts executable (if needed)
          chmod +x deploy.sh manage-service.sh
          
          # Run deployment
          ./deploy.sh production
          
          # Check service status
          ./manage-service.sh status
          ```
          
          ### 3. Verify Deployment
          
          Test your endpoints:
          
          ```bash
          # Health check
          curl http://localhost:8080/health
          
          # Token endpoint
          curl http://localhost:8080/form-token.js
          
          # External access (replace with your domain)
          curl http://contact.connexxo.com:8080/health
          ```
          
          ## 🛠️ Service Management
          
          ```bash
          # Start service
          ./manage-service.sh start
          
          # Stop service
          ./manage-service.sh stop
          
          # Restart service
          ./manage-service.sh restart
          
          # Update service (rebuild and restart)
          ./manage-service.sh update
          
          # View logs
          ./manage-service.sh logs
          
          # Follow logs in real-time
          ./manage-service.sh follow
          ```
          
          ## 🎯 Success Indicators
          
          - Container is running: `docker ps | grep hugo-contact`
          - Health endpoint returns: `{"status":"ok","service":"hugo-contact"}`
          - Token endpoint returns JavaScript code
          - No errors in logs: `./manage-service.sh logs`
          
          ## 📞 Support
          
          If you encounter issues:
          1. Check logs: `./manage-service.sh logs`
          2. Verify Docker is installed: `docker --version`
          3. Check port 8080 is free: `netstat -tuln | grep 8080`
          4. Ensure .env file has correct values
          
          ---
          
          **✅ Ready for Production Deployment!**
          EOF
          
          # Create archive for easy download
          tar -czf hugo-contact-deployment.tar.gz hugo-contact-deployment/
          
          echo "✅ Deployment package created successfully!"
          echo "📁 Directory: hugo-contact-deployment/"
          echo "📦 Archive: hugo-contact-deployment.tar.gz"
          
      - name: Upload deployment package
        uses: actions/upload-artifact@v4
        with:
          name: hugo-contact-deployment
          path: |
            hugo-contact-deployment/
            hugo-contact-deployment.tar.gz
          retention-days: 30
      
      - name: Deployment Summary
        run: |
          echo "## 🎉 Deployment Package Ready!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 What's Included:" >> $GITHUB_STEP_SUMMARY
          echo "- Tested and built application" >> $GITHUB_STEP_SUMMARY
          echo "- Docker configuration files" >> $GITHUB_STEP_SUMMARY
          echo "- Production .env file with secrets" >> $GITHUB_STEP_SUMMARY
          echo "- Deployment and management scripts" >> $GITHUB_STEP_SUMMARY
          echo "- Complete deployment instructions" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "1. Download the deployment package from the Artifacts section below" >> $GITHUB_STEP_SUMMARY
          echo "2. Extract and upload files to your server" >> $GITHUB_STEP_SUMMARY
          echo "3. SSH into your server and run: \`./deploy.sh production\`" >> $GITHUB_STEP_SUMMARY
          echo "4. Verify deployment: \`curl http://localhost:8080/health\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Files Ready:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          ls -la hugo-contact-deployment/ >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY